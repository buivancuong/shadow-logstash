input {
    file {
        file_completed_action => "log_and_delete"
        file_completed_log_path => "/var/log/logstash/completed.log"
        file_sort_by => "path"
        mode => "read"
        path => "/var/log/uploaded/Accessible*.csv"
        sincedb_clean_after => 0.125
        sincedb_path => "/dev/null"
    }
}

filter {
    ### Accessible-Android-Debug-Bridge
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Android-Debug-Bridge" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN", "geo",
                "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "ADB_Name", "ADB_Model",
                "ADB_Device", "ADB_Features", "Orgs"
            ]
        }
        mutate { split => { "ADB_Features" => "," } }
        mutate { split => { "Orgs" => "," } }  
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Apple-Filing-Protocol
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Apple-Filing-Protocol" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN", "geo",
                "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "AFP_MachineType", "Version",
                "AFP_UAMS", "AFP_Flags", "AFP_ServerName", "AFP_Signature", "directoryService",
                "utf8ServerName", "networkAddress", "Orgs"
            ]
        }
        mutate { split => { "Version" => "," } }
        mutate { split => { "AFP_UAMS" => "," } }
        mutate { split => { "AFP_Flags" => "," } }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Apple-Remote-Desktop
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Apple-Remote-Desktop" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN",
                "geo", "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "ARD_MachineName",
                "responseSize", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }  
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Cisco-Smart-Install
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Cisco-Smart-Install" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", 
                "SrcIP_ASN", "geo", "SrcIP_RegionName", "SrcIP_CityName",
                "naics", "sic", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-CoAP
    grok { match => { "path" => "^/var/log/uploaded/Accessible-CoAP" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN", "geo",
                "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "CoAP_Responses", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
        mutate { split => { "CoAP_Responses" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-CWMP
    grok { match => { "path" => "^/var/log/uploaded/Accessible-CWMP" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN", "geo",
                "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "http", "httpCode", "httpReason",
                "contentType", "connection", "wwwAuthenticate", "setCookie", "Server", "contentLength",
                "transferEncoding", "date", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-FTP-Service
    grok { match => { "path" => "^/var/log/uploaded/Accessible-FTP-Service" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN", "geo",
                "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "banner", "HandShake",
                "FTP_CipherSuite", "certLength", "SubjectName", "IssuerName", "certIssueDate",
                "certExpirationDate", "sha1FingerPrint", "certSerialNumber", "SSLVersion",
                "SignatureAlgorithm", "KeyAlgorithm", "SubjectName","subjectOrgUnitName",
                "subjectCountry", "subjectProvinceName", "subjectLocalityName", "subjectStreetAddress",
                "subjectPostalCode", "subjectSurname", "subjectGivenName", "subjectEmaillAddress",
                "subjectBusinessCategory", "subjectSerialNumber", "IssuerName", "issuerOrgUnitName",
                "issuerCountry", "issuerProvinceName", "issuerLocalityName", "issuerStreetAddress",
                "issuerPostalCode", "issuerSurname", "issuerGivenName", "IssuerEmailAddress",
                "issuerBusinessCategory", "issuerSerialNumber", "sha256FingerPrint",
                "sha512FingerPrint", "md5FingerPrint", "certValid", "selfSigned", "certExpired",
                "validationLevel", "AuthTLSResponse", "TLSv13Support", 
                "TLSv13Cipher", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Hadoop-Service
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Hadoop-Service" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "SrcPort", "HostName", "Versions", "SrcIP_ASN",
                "geo", "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "serverType",
                "ClusterID", "totalDisk", "usedDisk", "freeDisk", "liveNodes",
                "nameNodeAddress", "volumeInfo", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
        mutate { split => { "Versions" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-HTTP
    grok { match => { "path" => "^/var/log/uploaded/Accessible-HTTP" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "SrcIP_ASN",
                "geo", "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic", "http",
                "httpCode", "httpReason", "contentType", "connection", "wwwAuthenticate",
                "setCookies", "Server", "contentLength", "transferEncoding", "httpDate",
                "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Open-MongoDB-Service
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Open-MongoDB-Service" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", "Version", 
                "SrcIP_ASN", "geo", "SrcIP_RegionName", "SrcIP_CityName", "naics", "sic",
                "gitVersion", "sysInfo", "openSSLVersion", "allocator", "jsEngine", "bits",
                "maxBSONObjectSize", "ok", "OMDB_VisibleDBs", "sector", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
        mutate { split => { "OMDB_VisibleDBs" => "|" } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-Radmin
    grok { match => { "path" => "^/var/log/uploaded/Accessible-Radmin" } }
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", 
                "Version", "SrcIP_ASN", "geo", "SrcIP_RegionName", "SrcIP_CityName",
                "naics", "sic", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
    ### Accessible-RDP-Services
    if "_grokparsefailure" not in [tags] {
        if [message] =~ /^[,]+\r$/ { drop {} }
        csv {
            skip_empty_rows => true
            columns => [
                "LogTime", "SrcIP", "Protocol", "SrcPort", "HostName", "Tag", 
                "Version", "SrcIP_ASN", "geo", "SrcIP_RegionName", "SrcIP_CityName",
                "naics", "sic", "Orgs"
            ]
        }
        mutate { split => { "Orgs" => "," } }
    }
    else {
        mutate { remove_tag => ["_grokparsefailure"] }
    }
}

output {
    elasticsearch {
        hosts => ["localhost:8686"]
        manage_template => false        
        index => "accessible"	
        template => "/etc/logstash/template.d/accessible.json"
        http_compression => true
        ssl => true
        ssl_certificate_verification => false
        user => "logstash_user"
        password => "Logst4sh@123"
    }
}
